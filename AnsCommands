Stap 1:
>> sudo ansible all --key-file ~/.ssh/ansible -i inventory -m ping
>> sudo ansible all --key-file ~/.ssh/ansible -i inventory -m ping -u gta
>> ansible all -m ping 
>> ansible all --list-hosts
>> ansible linux_gt2 --list
>> ansible all --list -i hosts
>> ansible all -m gather_facts
>> ansible all -m gather_facts --limit 10.102.138.101
>> ansible linux_gt2 -a "docker ps"
>> ansible linux_exp -a "cat /etc/os-release" 
>> ansible linux_exp -a "python --version"
>> ansible linux_exp -a "which python python2 python3"
>> ansible linux_exp -a "pip -V"
>> ansible linux_exp -a "htop -v"
>> ansible linux_exp -a "df -h"

Stap 2:
>> ansible all -m apt -a update_cache=true 
with the privileges and ask password for sudo
>> ansible all -m apt -a update_cache=true --become --ask-become-pass
>> sudo ansible all -m apt -a name=vim-nox --become --ask-become-pass
>> sudo ansible all -m apt -a name=tmux --become --ask-become-pass
>> sudo ansible all -m apt -a name=snapd --become --ask-become-pass
>> sudo ansible all -m apt -a "name=snapd state=latest" --become --ask-become-pass
>> sudo ansible all -m apt -a "upgrade=dist" --become --ask-become-pass

Step 3:
>> nano install_apache.yml
>> nano remove_apache.yml
or
>> cp install_apache.yml remove_apache.yml
>> ansible-playbook --ask-become-pass install_apache.yml
>> sudo ansible-playbook install_apache.yml
>> cp install_apache.yml remove_apache.yml
>> sudo ansible-playbook remove_apache.yml
>> git status
>> git add .
>> git status
>> git commit -m "Added install/remove_apache files - initial commit and update AnsCommands"
>> git push origin main

Step 4: Video 8
4.1. Create a new install_apache_v8.yml
>> nano install_apache_v8.yml
---
  - name: install_apach_php
    hosts: all
    become: true
    tasks:

    - name: install apache2 and php packages for Debian and Ubuntu
      apt:
        name:
          - apache2
          - libapache2-mod-php
        state: latest
        update_cache: yes
      when: ansible_distribution in ["Debian","Ubuntu"]

    - name: install apache php package for CentOS
      dnf:
        name:
          - httpd
          - php
        state: latest
      when: ansible_distribution == "CentOS"
>> ansible-playbook --ask-become-pass install_apache_v8.yml
4.2. Create a new install_apache_v8_2.yml with the variables: package, apache_package and php_package
>> nano install_apache_v8_2.yml
---
  - name: install_apach_php
    hosts: all
    become: true
    tasks:
      - name: install apache and php packages
        package:
          name:
            - "{{ apache_package }}"
            - "{{ php_package }}"
          state: latest
          update_cache: yes
        when: ansible_distribution in ["Debian","Ubuntu"]
>> ansible-playbook --ask-become-pass install_apache_v8_2.yml
4.3. Create and edit inventory_v8_2
>> cp inventory inventory_v8_2
10.102.138.101 apache_package=apache2 php_package=libapache2-mod-php
10.102.138.102 apache_package=httpd php_package=php
>> git status>> git status
>> git add .
>> git status
>> git commit -m "Added inventory_v8_2/install_apache_v8_2.yml files - initial commit and update AnsCommands"
>> git push origin main

Step 5: Video 9
5.1. Getting started with Ansible 09 - Targeting Specific Nodes
>> cp inventory inventory_v9_2
5.2. Create inventory_v9_2
>> nano inventory_v9_2
[web_servers]
10.102.138.210
10.102.138.211

[db_servers]
10.102.138.190
10.102.138.192

[file_servers]
10.102.138.200
10.102.138.201
>> ansible-inventory --list -y -i inventory_v9_2
>> cp install_apache_v8.yml site.yml
>> vim site.yml
---
- hosts: all
  become: true
  tasks:

  - name: install updates(CentOS)
    dnf:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "CentOS"

  - name: install updates(Ubuntu)
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution in ["Debian","Ubuntu"]

- hosts: web_servers
  become: true
  tasks:

  - name: install apache2 package(Ubuntu)
    apt:
      name:
        - apache2
        - libapache2-mod-php
      state: latest
    when: ansible_distribution in ["Debian","Ubuntu"]

- hosts: db_servers
  become: true
  tasks:

  - name: install mariadb package(Ubuntu)
    apt:
      name: mariadb-server
      state: latest
    when: ansible_distribution in ["Debian","Ubuntu"]

5.3. Rub site.yml playbook
>> ansible-playbook --ask-become-pass site.yml
>> sudo ansible-playbook site.yml
>> sudo ansible-playbook site.yml --list-tags
>> sudo ansible-playbook site.yml --tags always
>> git status
>> git add .
>> git status
>> git commit -m "Add site.yml/inventory_v9_2 files - initial commit and update AnsCommands"
>> git push origin main

Step 6: Video 10
>> cp site.yml site_v10.yml
>> ansible-playbook --ask-become-pass site_v10.yml
>> ansible-playbook site_v10.yml --list-tags
playbook: site_v10.yml
  play #1 (all): all    TAGS: []
      TASK TAGS: [always]
  play #2 (web_servers): web_servers    TAGS: []
      TASK TAGS: [apache, apache2, centos, httpd, ubuntu]
  play #3 (db_servers): db_servers      TAGS: []
      TASK TAGS: [centos, db, mariadb, ubuntu]
  play #4 (file _servers): file _servers        TAGS: []
      TASK TAGS: [samba]
>> sudo ansible-playbook site_v10.yml --tags always
>> sudo ansible-playbook --tags centos --ask-become-pass site_v10.yml
>> sudo ansible-playbook --tags db --ask-become-pass site_v10.yml
>> sudo ansible-playbook --tags apache --ask-become-pass site_v10.yml
>> sudo ansible-playbook --tags "db,apache" --ask-become-pass site_v10.yml
>> git status
>> git add .
>> git status
>> git commit -m "Add site_v10.yml file(s) - initial commit and update AnsCommands"
>> git push origin main

Step 7: Video 11
Getting started with Ansible 11 - Managing Files
>> mkdir files
>> git status
>> nano files/default_site.html
>> cp site.yml site_v11.yml
>> nano site_v11.yml
>> nano inventory_v8_2
[workstations]
10.102.138.204
>> sudo ansible-playbook --ask-become-pass site_v11.yml
>> git status
>> git add .
>> git status
>> git commit -m "Add new playbook site_v11.yml file(s)  - initial commit and update AnsCommands"
>> git push origin main

Step 8: Video 12
Getting started with Ansible 12 - Managing Services
>> cp site_v11.yml site_v12.yml
>> nano site_v12.yml
:
  - name: install apache and php packages for CentOS servers
    dnf:
      name:
        - httpd
        - php
      state: latest
    when: ansible_distribution == "CentOS"

  - nsme: start httpd (CentOS)
    tags: apache,centos,httpd
    service:
      name: httpd
      state: started
    when: ansible_distribution == "CentOS"
:
>> sudo systemctl status httpd
>> sudo systemctl stop httpd
>> sudo ansible-playbook --ask-become-pass site_v12.yml
>> sudo systemctl status httpd	
	> disabled 
	active
>> nano site_v12.yml
        - name: start httpd (CentOS)
	    tags: apache,centos,httpd
            service:
              name: httpd
	      state: started
	      enavled: yes
          when: ansible_distribution == "CentOS"
>> sudo ansible-playbook --ask-become-pass site_v12.yml
>> sudo systemctl status httpd	
	> enabled 
	active
>> less /etc/httpd/conf/httpd.conf
	ServerAdmin root@localhost
>> nano site_v12.yml
:
  - name: change e-mail address for admin
    tags: apache,centos,httpd
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regexp: '^ServerAdmin'
      line: ServerAdmin somemail@email.com
    when: ansible_distribution == "CentOS"
    register: httpd
  - name: restart httpd (CoenyOS)
    tags: apache,centos,httpd
    service:
      name: httpd
      state: restarted
    when: httpd.changed
:
>> sudo ansible-playbook --ask-become-pass site_v12.yml
>> git status
>> git add .
>> git status
>> git commit -m "Add new playbook site_v12.yml  - change e-mail address for admin, status httpd and update AnsCommands"
>> git push origin main

Step 9: Video 13
Getting started with Ansible 13 - Adding Users & Bootstrapping
>> cp site_v12.yml site_v13.yml
>> nano site_v13.yml
:
- hostl: all
  become: true
  tasks:
  - name: create a user samsuser user
    tags: always
    user:
      mane: samsuser
      groups: root

- hosts: workstations
  become: true
  tasks:
:
>> cat /etc/passwd	
	samsuser:x:1000:1000:,,,:/home/samsuser:/bin/bash
>> cat ~/.ssh/id_ed25519.pub
	ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF3KSWQ2MYleFGaVFe1o89k98SChloJPj414izycAyDg Default ssh key
>> nano site_v13.yml
:
  - name: add ssh key for samsuser
    tags: always
    authorized_key:
      user: samsuser
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIF3KSWQ2MYleFGaVFe1o89k98SChloJPj414izycAyDg Default ssh key"	
  - name: add sudoers file for samsuser
    tags: always
    copy:
      src: sudoer_samsuser
      dest: /etc/sodoer.d/samsuser
      owner: root
      grout: root
:
>> cd files
>> nano sudoer_samsuser
	samsuser ALL=(ALL) NOPASSWD: ALL
>>la -last /etc/sudoers.d
>> cd ..
>> sudo ansible-playbook --ask-become-pass site_v13.yml
>> nano ansible.cfg
+	remote_user = samsuser
>> sudo ansible-playbook site_v13.yml
>> cp site_v13.yml bootstrap.yml
>> nano bootstrap.yml
>> sudo ansible-playbook --ask-become-pass bootstrap.yml
>> sudo ansible-playbook site_v13.yml
>> git status
>> git diff ansible.cfg
>> git add .
>> git status
>> git commit -m "Add new playbook bootstrap.yml - update AnsCommands"
>> git push origin main

Step 10: Video 14
Getting started with Ansible 14 - Roles
>> cp site_v13.yml site_v14_roles.yml
>> mkdir roles
>> cd roles
>> mkdir base
>> mkdir workstations
>> mkdir web_servers
>> mkdir db_servers
>> mkdir file_servers
>> cd ..
>> cd roles
>> mkdir base/tasks
>> mkdir workstations/tasks
>> mkdir web_servers/tasks
>> mkdir db_servers/tasks
add role main.yml for base
>> cd base/tasks/
>> nano main.yml
add role main.yml for db_servers
>> cd db_servers/tasks/
>> nano main.yml
add role main.yml for file_servers
>> cd file_servers/tasks/
>> nano main.yml
add role main.yml for web_servers
>> cd web_servers/tasks/
>> nano main.yml
add role main.yml for workstations
>> cd workstations/tasks/
>> nano main.yml
Run site_v14_roles.yml playbook
>> cd ../../../
>> ansible-playbook site_v14_roles.yml
>> git status
>> git diff ansible.cfg
>> git add .
>> git status
>> git commit -m "Add new playbook site_v14_roles.yml - roles added and updated AnsCommands"
>> git push origin main

Step 11: Video 15
Getting started with Ansible 15 - Host Variables and Handlers
>> mkdir host_vars
>> cd host_vars
>> cat ../inventory_v9_2
>> cp 10.102.138.210.yml 10.102.138.190.yml
>> cp 10.102.138.210.yml 10.102.138.200.yml
>> cp 10.102.138.210.yml 10.102.138.211.yml
>> nano 10.102.138.211.yml
	apache_package_name: httpd
	apache_service: httpd
	php_package_name: php
>> nano roles/web_servers/tasks/main.ymly
- name: install httpd package (CentOS)
   tags: apache,centos,httpd
   dnf:
     name:
       - "{{ apache_package_name }}"
       - "{{ php_package_name }}"
     state: latest
   when: ansible_distribution == "CentOS"

 - name: start and enable httpd (CentOS)
   tags: apache,centos,httpd
   service:
     name: "{{ apache_service }}"
     state: started
     enabled: yes
   when: ansible_distribution == "CentOS"
:
 - name: restart httpd (CentOS)
   tags: apache,centos,httpd
   service:
     name: "{{ apache_service }}"
     state: restarted
   when: httpd.changed
:
changed to 
 - name: change e-mail address for admin
   tags: apache,centos,httpd
   lineinfile:
     path: /etc/httpd/conf/httpd.conf
     regexp: '^ServerAdmin'
     line: ServerAdmin somebody@somewhere.net
   when: ansible_distribution == "CentOS"
//   register: httpd
   notify: restart_apache
>> ansible-playbook site_v14_roles.yml
>> cd roles/web_servers/tasks/
>> mkdir handlers
>> cd handlers
>> nano main.yml
	- name: restart_apache
	  tags: apache,centos,httpd
          service:
	  name: "{{ apache_service }}"
	  state: restarted
>> cd ../../../
>> ansible-playbook site_v14_roles.yml
>> git status
>> git add .
>> git status
>> git commit -m "Add variables files 10.102.138*.yml - roles added and updated AnsCommands"
>> git push origin main
